{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","components/ReminderModal.js","App.js","reportWebVitals.js","index.js"],"names":["Button","_ref","color","text","onClick","react_default","a","createElement","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","components_Button","protoType","PropTypes","string","isRequired","Footer","react_router_dom","to","Task","task","onDelete","onToggle","onDone","onToggleReminder","concat","reminder","done","onDoubleClick","id","index_esm","Intl","DateTimeFormat","day","month","year","hour","minute","format","date","type","checked","onChange","Tasks","tasks","myTasks","map","sort","b","Date","index","components_Task","key","AddTask","_useState","useState","_useState2","Object","slicedToArray","setText","_useState3","_useState4","setDate","_useState5","_useState6","setReminder","_useState7","_useState8","setDone","onSubmit","e","preventDefault","alert","placeholder","value","target","entry_default","disableClock","currentTarget","About","ReminderModal","isOpen","onClose","lib_default","parentSelector","document","querySelector","overlayClassName","ariaHideApp","cursor","height","App","showAddTask","setShowAddTask","setIsOpen","setTasks","addTask","asyncToGenerator","_regeneratorRuntime","mark","_callee","newTask","wrap","_context","prev","next","Math","floor","random","objectSpread","toConsumableArray","console","log","stop","_x","apply","this","arguments","deleteTask","_ref2","_callee2","_context2","filter","_x2","toggleReminder","_ref3","_callee3","_context3","_x3","components_Header","components_ReminderModal","react_router","path","element","Fragment","components_AddTask","length","components_Tasks","components_About","components_Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d5484b74.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n  return (\r\n    <button \r\n    onClick={onClick}\r\n    style={{backgroundColor: color}} \r\n    className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n    text: 'Button',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n\r\n  return (\r\n    <header className='header'>\r\n        <h1>{title}</h1>\r\n        <Button \r\n        color={showAdd ? 'red' : '#009dff'} \r\n        text={showAdd ? '\\u2716' : 'Add'} \r\n        onClick={onAdd} \r\n        />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Tasks',\r\n}\r\n\r\nHeader.protoType = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nfunction Footer() {\r\n\r\n  return (\r\n    <footer>\r\n        <Link \r\n        className={'about-link'}\r\n        to=\"/about\"\r\n        >\r\n          About\r\n          </Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nfunction Task({task, onDelete, onToggle, onDone, onToggleReminder}) {  \r\n\r\n  function doubleClick() {\r\n    onToggleReminder(task.id)\r\n    if (task.reminder) {\r\n      onToggleReminder(task.id)\r\n    } else if (task.done) {\r\n      \r\n    } else {\r\n      onToggle(task.id)\r\n    }\r\n    // task.reminder ? onToggleReminder(task.id) : onToggle(task.id)\r\n  }\r\n\r\n  return (\r\n    <div \r\n    className={`task ${task.reminder ? 'reminder' : task.done ? 'done' : ''}`}\r\n    onDoubleClick={doubleClick}\r\n    >\r\n        <h3>\r\n            {task.text} \r\n            <FaTimes \r\n            style={{color: 'red'}} \r\n            onClick={() => onDelete(task.id)} \r\n            />\r\n        </h3>\r\n        <p>{new Intl.DateTimeFormat('en-GB', { day: 'numeric', month: 'short', year: 'numeric', hour: 'numeric', minute: 'numeric' }).format(task.date)}</p>\r\n        <div className=\"markAsDone\">\r\n          <label>Mark as done</label>\r\n          <input \r\n          type='checkbox' \r\n          checked={task.done}\r\n          onChange={() => onDone(task.id)}\r\n          />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task","import React from \"react\"\r\nimport Task from \"./Task\"\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle, onDone, onToggleReminder}) => {\r\n\r\n  const myTasks = (tasks.map(task => task).sort((a, b) => new Date(a.date) - new Date(b.date)))\r\n\r\n  return (\r\n    <div>\r\n        {myTasks.map((task, index) => (\r\n        <Task \r\n        key={index} \r\n        task={task}\r\n        onDelete={onDelete} \r\n        onToggle={onToggle}\r\n        onDone={onDone}\r\n        onToggleReminder={onToggleReminder}\r\n        />\r\n        ))}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Tasks","import React from 'react'\r\nimport { useState } from 'react'\r\n// import DatePicker from 'react-date-picker'\r\n// import TimePicker from 'react-time-picker'\r\nimport DateTimePicker from 'react-datetime-picker'\r\n\r\nfunction AddTask({ onAdd }) {\r\n    const [text, setText] = useState('')\r\n    const [date, setDate] = useState(new Date())\r\n    const [reminder, setReminder] = useState(false)\r\n    const [done, setDone] = useState(false)\r\n\r\nconst onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n        alert('Please add a task')\r\n        return\r\n    }\r\n\r\n    onAdd({ text, date, reminder, done})\r\n    \r\n    setText('')\r\n    setDate(new Date())\r\n    setReminder(false)\r\n    setDone(false)\r\n}    \r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n            <label>Task</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Add Task'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)} \r\n                />\r\n        </div>\r\n        <div className='form-control form-control-date'>\r\n            <label>Date and Time</label>\r\n                <DateTimePicker \r\n                    className='date-picker'\r\n                    value={date} \r\n                    onChange={setDate} \r\n                    format=\"d/M/yyyy HH:m\"\r\n                    disableClock={true} \r\n                />\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n            <label>Set Reminder</label>\r\n                <input \r\n                    type='checkbox' \r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n        </div>\r\n        <input type='submit' value='Save Task' className=\"btn btn-block\" />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction About() {\r\n  return (\r\n    <div className='about-page'>\r\n        <h4>Version 1.0.0</h4>\r\n        <p>UI for a task tracking app. You can\r\n          add and delete tasks, mark as done and set reminders,\r\n          <br/>double click on existing tasks to set a reminder.  \r\n          <br/>Tasks are automatically sorted by Date and Time.\r\n          <br/>Built using React.\r\n        </p>\r\n        <div className='back-btn-container'>\r\n        <Link \r\n        className='go-back-btn'\r\n        to='/'\r\n        >\r\n          \t&#10094; Back\r\n          </Link>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import React from \"react\";\r\nimport ReactModal from 'react-modal';\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\n\r\n\r\nfunction ReminderModal({isOpen, onClose, onToggleReminder, task}) {\r\n\r\n    function setButton() {\r\n        // onToggleReminder(task.id)\r\n        onClose()\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <ReactModal\r\n            parentSelector={() => document.querySelector('.container')}\r\n            className={\"reminder-modal\"}\r\n            overlayClassName={'modal-overlay'}\r\n            isOpen={isOpen}\r\n            ariaHideApp={false}\r\n        >\r\n         <h4>\r\n            Set Reminder\r\n            <FaTimes \r\n            style={{color: 'red', cursor: 'pointer', height: '18px'}} \r\n            onClick={onClose}\r\n            />\r\n            </h4>\r\n            <div\r\n                className=\"test\">\r\n            <p>\r\n                <input \r\n                type='number'\r\n                placeholder=\"0\"\r\n                /> \r\n                days before\r\n                </p>\r\n            </div>\r\n            <div\r\n                className=\"test\">\r\n            <p>\r\n                <input \r\n                type='number'\r\n                placeholder=\"0\"\r\n                /> \r\n                minutes before\r\n                </p>\r\n            </div>\r\n            <div className=\"set-reminder-btn-container\">\r\n                <button className=\"set-reminder-btn\" onClick={setButton}>Set</button>\r\n            </div>\r\n        </ReactModal>\r\n    )\r\n}\r\n\r\nexport default ReminderModal","import React from \"react\"\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport { useState } from \"react\"\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\nimport ReminderModal from './components/ReminderModal'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [isOpen, setIsOpen] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n// useEffect(() => {\n//   const getTasks = async () => {\n//     const tasksFromServer = await fetchTasks()\n//     setTasks(tasksFromServer)\n//   }\n\n//   getTasks()\n// }, [])\n\n\n//Fetch Tasks \n// const fetchTasks = async () => {\n//   const res = await fetch('http://localhost:5000/tasks')\n//   const data = await res.json()\n\n//   return data\n// }\n\n// //Fetch Task \n// const fetchTask = async (id) => {\n//   const res = await fetch(`http://localhost:5000/tasks/${id}`)\n//   const data = await res.json()\n\n//   return data\n// }\n\n\n\n\n//Add Task\nconst addTask = async (task) => {\n  // const res = await fetch('http://localhost:5000/tasks', {\n  //   method: 'POST',\n  //   headers: {\n  //     'Content-type': 'application/json',\n  //   },\n  //   body: JSON.stringify(task)\n  // })\n  \n  // const data = await res.json()\n  // setTasks([...tasks, data])\n  \n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n  console.log(newTask)\n\n}\n\n//Delete Task\nconst deleteTask = async (id) => {\n  // await fetch(`http://localhost:5000/tasks/${id}`, {\n  //   method: 'DELETE',\n  // })\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\nconst openModal = () => {\n  setIsOpen(true)\n}\n\nconst closeModal =() => {\n  setIsOpen(false)\n}\n\n\n//Toggle Reminder\nconst toggleReminder = async (id) => {\n  // const taskToToggle = await fetchTask(id)\n  // const updateTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n  // const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n  //   method: 'PUT',\n  //   headers: {\n  //     'Content-type': 'application/json',\n  //   },\n  //   body: JSON.stringify(updateTask)\n  // })\n\n  // const data = await res.json()\n\n  setTasks(\n    tasks.map((task) => \n    (task.id === id && task.done === false) ? \n    {...task, reminder: !task.reminder} : task\n    )\n  )\n}\n\n// Mark as done\nconst markDone = (id) => {\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? \n    {...task, done: !task.done, reminder: false} : task\n    )\n  )\n}\n\n\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header \n          onAdd={() => setShowAddTask(!showAddTask)} \n          showAdd={showAddTask}\n        />\n        <ReminderModal \n          isOpen={isOpen} \n          onClose={closeModal} \n          onToggleReminder={toggleReminder}\n          task={tasks}\n        />\n        <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n                {showAddTask && <AddTask onAdd={addTask}/>}\n                {tasks.length > 0 ? (\n                  <Tasks \n                    tasks={tasks} \n                    onDelete={deleteTask}\n                    onToggle={openModal}\n                    onDone={markDone}\n                    onToggleReminder={toggleReminder}\n                  /> \n                ) : ( \n                  'No Tasks'\n                )}\n              </>\n            }\n          />\n          <Route path='/about' element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}